// Code generated by goctl. DO NOT EDIT.
package handler

import (
	"net/http"
	"time"

	FileInfo "github.com/dunzane/brainbank-file/api/internal/handler/FileInfo"
	FileOps "github.com/dunzane/brainbank-file/api/internal/handler/FileOps"
	"github.com/dunzane/brainbank-file/api/internal/svc"

	"github.com/zeromicro/go-zero/rest"
)

func RegisterHandlers(server *rest.Server, serverCtx *svc.ServiceContext) {
	server.AddRoutes(
		rest.WithMiddlewares(
			[]rest.Middleware{serverCtx.JwtMiddleware},
			[]rest.Route{
				{
					Method:  http.MethodPost,
					Path:    "/upload",
					Handler: FileOps.UploadFileHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/update",
					Handler: FileOps.UpdateFileHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/list",
					Handler: FileOps.ListFilesHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/delete",
					Handler: FileOps.DeleteFileHandler(serverCtx),
				},
			}...,
		),
		rest.WithJwt(serverCtx.Config.Auth.AccessSecret),
		rest.WithPrefix("/v1/file"),
		rest.WithTimeout(20000*time.Millisecond),
	)

	server.AddRoutes(
		rest.WithMiddlewares(
			[]rest.Middleware{serverCtx.JwtMiddleware},
			[]rest.Route{
				{
					Method:  http.MethodPost,
					Path:    "/preview",
					Handler: FileInfo.PreviewFileHandler(serverCtx),
				},
				{
					Method:  http.MethodGet,
					Path:    "/fileinfo",
					Handler: FileInfo.FileInfoHandler(serverCtx),
				},
			}...,
		),
		rest.WithJwt(serverCtx.Config.Auth.AccessSecret),
		rest.WithPrefix("/v1/file"),
		rest.WithTimeout(20000*time.Millisecond),
	)
}

// Code generated by goctl. DO NOT EDIT.
// Source: fileInfo.proto

package fileinfo

import (
	"context"

	"github.com/dunzane/brainbank-file/rpc/fileInfo/pb"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	FileObject          = pb.FileObject
	GetFileInfoRequest  = pb.GetFileInfoRequest
	GetFileInfoResponse = pb.GetFileInfoResponse
	PreviewFileRequest  = pb.PreviewFileRequest
	PreviewFileResponse = pb.PreviewFileResponse

	FileInfo interface {
		PreviewFile(ctx context.Context, in *PreviewFileRequest, opts ...grpc.CallOption) (*PreviewFileResponse, error)
		GetFileInfo(ctx context.Context, in *GetFileInfoRequest, opts ...grpc.CallOption) (*GetFileInfoResponse, error)
	}

	defaultFileInfo struct {
		cli zrpc.Client
	}
)

func NewFileInfo(cli zrpc.Client) FileInfo {
	return &defaultFileInfo{
		cli: cli,
	}
}

func (m *defaultFileInfo) PreviewFile(ctx context.Context, in *PreviewFileRequest, opts ...grpc.CallOption) (*PreviewFileResponse, error) {
	client := pb.NewFileInfoClient(m.cli.Conn())
	return client.PreviewFile(ctx, in, opts...)
}

func (m *defaultFileInfo) GetFileInfo(ctx context.Context, in *GetFileInfoRequest, opts ...grpc.CallOption) (*GetFileInfoResponse, error) {
	client := pb.NewFileInfoClient(m.cli.Conn())
	return client.GetFileInfo(ctx, in, opts...)
}
